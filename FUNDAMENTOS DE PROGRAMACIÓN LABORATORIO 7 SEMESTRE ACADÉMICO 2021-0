#include <stdio.h>
#include <math.h>

int comb(int sup,int inf){
    if(inf ==0)return 1;
    int numerador=1,denominador=1;
    for(int i=1;i<=inf;i++){
        numerador*=sup;
        sup--;
    }
    for(int i=1;i<=inf;i++){
        denominador*=i;
    }
    return(numerador/denominador);
}

int main(void) {
	int i,j,k;
	int n;
    printf("Ingrese la cantidad de veces que se lanza una moneda (0 < n <= 6):\n");
    scanf("%d",&n);
    //provamos que sea valido
    if(n<=0 || n>=7){
        printf("Cantidad de veces no válida.\n");
        return 0;
    }
    printf("La grafica de distribución de probabilidades es:\n");
    //espaciamos los n numeros + xi 
    for(i=0;i<=2*n+1;i++){
        printf("  ");
    }
    printf("   f(xi)\n");
    //recordar que en combinatoria (n,x)=(n,n-x)
    //El max valor es (n,n/2) en caso sea impar es el mimo valor que (n,n/2+1)
    
    int pot=pow(2,n);
    int max_prob=comb(n,n/2);
    int mid=n/2;
    //La idea es ir construyendo desde el centro hacia los bordes
    for(i=max_prob;i>=1;i--){
        for(j=0;j<=n/2;j++){
            int val=comb(n,j);
                if(val>=i){
                	printf("   ");
                    for(k=0;k<j;k++){
                        printf("  ");
                    }
                    for(k=mid;k>=j;k--){
                        printf("| ");
                    }
                    for(k=mid;k<n-j;k++){
                        printf("| ");
                    }
                    for(k=n-j;k<=2*n;k++){
                        printf("  ");
                    }
                    break;
                }
                
        }
        
        printf("%d",i);
        printf("/%d\n",pot);
    }
    
    printf("xi ");
    for(int i=0;i<=n;i++){
    	printf("%d ",i);
    }
    
    return 0;
}
